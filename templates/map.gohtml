<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript">
        function initMap() {
            /* Data points defined as an array of LatLng objects */
            var heatmapData = [
                {{range .MapPoints}}
                {location: new google.maps.LatLng({{.Lat}}, {{.Lng}}), weight: {{.Weight}}},
                {{end}}
            ];

            {{/*var mapCenter = new google.maps.LatLng({{.CenterLat}}, {{.CenterLng}});*/}}
            var mapCenter = new google.maps.LatLng(0, 0);

            map = new google.maps.Map(document.getElementById("map"), {
                center: mapCenter,
                zoom: 2,
                mapTypeId: 'roadmap'
            });

            // Create the search box and link it to the UI element.
            const input = document.getElementById("pac-input");
            const searchBox = new google.maps.places.SearchBox(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            map.addListener("bounds_changed", () => {
                searchBox.setBounds(map.getBounds());
            });

            searchBox.addListener("places_changed", () => {
                const places = searchBox.getPlaces();

                if (places.length == 0) {
                    return;
                }

                // For each place, get the icon, name and location.
                const bounds = new google.maps.LatLngBounds();

                places.forEach((place) => {
                    if (!place.geometry || !place.geometry.location) {
                        console.log("Returned place contains no geometry");
                        return;
                    }

                    if (place.geometry.viewport) {
                        // Only geocodes have viewport.
                        bounds.union(place.geometry.viewport);
                    } else {
                        bounds.extend(place.geometry.location);
                    }
                });
                map.fitBounds(bounds);

                var lat0 = map.getBounds().getNorthEast().lat();
                var lng0 = map.getBounds().getNorthEast().lng();
                var lat1 = map.getBounds().getSouthWest().lat();
                var lng1 = map.getBounds().getSouthWest().lng();
                console.log(lat0, lng0, lat1, lng1);
            });

            var heatmap = new google.maps.visualization.HeatmapLayer({
                // data: heatmapData
                data: []
            });
            heatmap.setOptions({
                radius: 10
            })
            heatmap.setMap(map);
        }

        function loadMapsAPI() {
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.src = "https://maps.googleapis.com/maps/api/js?key={{.ApiKey}}&libraries=visualization,places&region=japan&callback=initMap";
            document.body.appendChild(script);
        }
    </script>
    <style>
        /*
         * Always set the map height explicitly to define the size of the div element
         * that contains the map.
         */
        #map {
            height: 100%;
            width: 100%;
        }

        /*
         * Optional: Makes the sample page fill the window.
         */
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0;
            padding: 0;
        }

        #description {
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
        }

        #infowindow-content .title {
            font-weight: bold;
        }

        #infowindow-content {
            display: none;
        }

        #map #infowindow-content {
            display: inline;
        }

        .pac-card {
            background-color: #fff;
            border: 0;
            border-radius: 2px;
            box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.3);
            margin: 10px;
            padding: 0 0.5em;
            font: 400 18px Roboto, Arial, sans-serif;
            overflow: hidden;
            font-family: Roboto;
            padding: 0;
        }

        #pac-container {
            padding-bottom: 12px;
            margin-right: 12px;
        }

        .pac-controls {
            display: inline-block;
            padding: 5px 11px;
        }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 600px;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        #title {
            color: #fff;
            background-color: #4d90fe;
            font-size: 25px;
            font-weight: 500;
            padding: 6px 12px;
        }

        #target {
            width: 345px;
        }
    </style>

</head>
<body onload="loadMapsAPI()">
    <input id="pac-input" class="controls" type="text" placeholder="Start by searching for a place!"/>
    <div id="map"></div>
</body>
</html>
